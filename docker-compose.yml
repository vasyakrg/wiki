version: '3.7'
services:

  nginx:
    image: nginx
    restart: always
    container_name: ${SERVICE_NAME}_${CONTAINER_NAME_NGINX}
    depends_on:
    - server
    - db
    volumes:
    - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    environment:
    - LETSENCRYPT_HOST=${DOMAIN_NAME}
    - VIRTUAL_HOST=${DOMAIN_NAME}
    - BACKEND_NAME=${SERVICE_NAME}_${CONTAINER_NAME_SERVER}:${BACKEND_PORT}
    command: /bin/bash -c "envsubst '$$VIRTUAL_HOST $$BACKEND_NAME' < /etc/nginx/nginx.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat-amega.entrypoints=https"
      - "traefik.http.routers.chat-amega.rule=Host(`wiki.amegaserver.com`)"
      - "traefik.http.routers.chat-amega.tls=true"
      - "traefik.http.routers.chat-amega.tls.certresolver=letsEncrypt"
      - "traefik.http.services.chat-amega-service.loadbalancer.server.port=80"
      - "traefik.docker.network=webproxy"
    networks:
    - ${SERVICE_NAME}
    - ${WEBPROXY_NETWORK}

  server:
    image: ${DOCKER_IMAGE_SERVER}:${WIKI_VERSION}
    restart: always
    container_name: ${SERVICE_NAME}_${CONTAINER_NAME_SERVER}
    depends_on:
      - db
    environment:
      - DB_TYPE=${DBTYPE}
      - DB_HOST=${DBHOST}
      - DB_USER=${DBUSER}
      - DB_PASS=${DBPASS}
      - DB_NAME=${DBTABLE}
      - DB_PORT=5432
    networks:
      - ${SERVICE_NAME}

  db:
    image: ${DOCKER_IMAGE_DB}
    restart: always
    container_name: ${SERVICE_NAME}_${CONTAINER_NAME_DB}
    environment:
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASS}
      - POSTGRES_DB=${DBTABLE}
    volumes:
      - wiki_db:/var/lib/postgres/data
    networks:
      - ${SERVICE_NAME}

networks:
  wiki:
    name: ${SERVICE_NAME}
  webproxy:
    external:
      name: ${WEBPROXY_NETWORK}

volumes:
  wiki_db:
